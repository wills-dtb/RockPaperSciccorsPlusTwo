[0m[[0m[0mdebug[0m] [0m[0m[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial source changes: [0m
[0m[[0m[0mdebug[0m] [0m[0m	removed:Set(/home/will/workspace/RockPaperSciccorsPlusTwo/src/main/scala/GameLogic.scala, /home/will/workspace/RockPaperSciccorsPlusTwo/src/main/scala/config/AppConfig.scala, /home/will/workspace/RockPaperSciccorsPlusTwo/src/main/scala/GameSession.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0m	added: Set(/home/will/workspace/RockPaperSciccorsPlusTwo/target/scala-2.12/twirl/main/twirl/html/winner.template.scala, /home/will/workspace/RockPaperSciccorsPlusTwo/src/main/scala/controller/UmpireController.scala, /home/will/workspace/RockPaperSciccorsPlusTwo/target/scala-2.12/twirl/main/twirl/html/loser.template.scala, /home/will/workspace/RockPaperSciccorsPlusTwo/target/scala-2.12/twirl/main/twirl/html/tie.template.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0m	modified: Set(/home/will/workspace/RockPaperSciccorsPlusTwo/src/main/scala/repository/GameRepository.scala, /home/will/workspace/RockPaperSciccorsPlusTwo/src/main/scala/BaseRouter.scala, /home/will/workspace/RockPaperSciccorsPlusTwo/src/main/scala/Main.scala, /home/will/workspace/RockPaperSciccorsPlusTwo/target/scala-2.12/twirl/main/twirl/html/home.template.scala, /home/will/workspace/RockPaperSciccorsPlusTwo/src/main/scala/GameDirectives.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated products: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mExternal API changes: API Changes: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mModified binary dependencies: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial directly invalidated classes: Set(GameRouter, GameLogic, twirl.html.home, repository.GameRepository, Main, GameSession, repository.InMemoryGameRepository, GameDirectives, BaseRouter)[0m
[0m[[0m[0mdebug[0m] [0m[0m[0m
[0m[[0m[0mdebug[0m] [0m[0mSources indirectly invalidated by:[0m
[0m[[0m[0mdebug[0m] [0m[0m	product: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	binary dep: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	external source: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated classes: Set(GameRouter, GameLogic, twirl.html.home, repository.GameRepository, Main, GameSession, repository.InMemoryGameRepository, GameDirectives, BaseRouter)[0m
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated sources:Set(/home/will/workspace/RockPaperSciccorsPlusTwo/target/scala-2.12/twirl/main/twirl/html/winner.template.scala, /home/will/workspace/RockPaperSciccorsPlusTwo/src/main/scala/repository/GameRepository.scala, /home/will/workspace/RockPaperSciccorsPlusTwo/src/main/scala/BaseRouter.scala, /home/will/workspace/RockPaperSciccorsPlusTwo/src/main/scala/controller/UmpireController.scala, /home/will/workspace/RockPaperSciccorsPlusTwo/src/main/scala/Main.scala, /home/will/workspace/RockPaperSciccorsPlusTwo/target/scala-2.12/twirl/main/twirl/html/loser.template.scala, /home/will/workspace/RockPaperSciccorsPlusTwo/target/scala-2.12/twirl/main/twirl/html/tie.template.scala, /home/will/workspace/RockPaperSciccorsPlusTwo/target/scala-2.12/twirl/main/twirl/html/home.template.scala, /home/will/workspace/RockPaperSciccorsPlusTwo/src/main/scala/GameDirectives.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0mRecompiling all 14 sources: invalidated sources (11) exceeded 50.0% of all sources[0m
[0m[[0m[0minfo[0m] [0m[0mCompiling 14 Scala sources to /home/will/workspace/RockPaperSciccorsPlusTwo/target/scala-2.12/classes ...[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting org.scala-sbt:compiler-bridge_2.12:1.2.5:compile for Scala 2.12.8[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting org.scala-sbt:compiler-bridge_2.12:1.2.5:compile for Scala 2.12.8[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] Running cached compiler 25b42ff8 for Scala compiler version 2.12.8[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] The Scala compiler is invoked with:[0m
[0m[[0m[0mdebug[0m] [0m[0m	-bootclasspath[0m
[0m[[0m[0mdebug[0m] [0m[0m	/usr/lib/jvm/java-8-oracle/jre/lib/resources.jar:/usr/lib/jvm/java-8-oracle/jre/lib/rt.jar:/usr/lib/jvm/java-8-oracle/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jsse.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jce.jar:/usr/lib/jvm/java-8-oracle/jre/lib/charsets.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jfr.jar:/usr/lib/jvm/java-8-oracle/jre/classes:/home/will/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.12.8.jar[0m
[0m[[0m[0mdebug[0m] [0m[0m	-classpath[0m
[0m[[0m[0mdebug[0m] [0m[0m	/home/will/workspace/RockPaperSciccorsPlusTwo/target/scala-2.12/classes:/home/will/.ivy2/cache/com.typesafe.play/twirl-api_2.12/jars/twirl-api_2.12-1.4.1.jar:/home/will/.ivy2/cache/org.scala-lang.modules/scala-xml_2.12/bundles/scala-xml_2.12-1.2.0.jar:/home/will/.ivy2/cache/org.scala-lang/scala-reflect/jars/scala-reflect-2.12.8.jar:/home/will/.ivy2/cache/io.circe/circe-generic_2.12/jars/circe-generic_2.12-0.10.0.jar:/home/will/.ivy2/cache/com.chuusai/shapeless_2.12/bundles/shapeless_2.12-2.3.3.jar:/home/will/.ivy2/cache/org.typelevel/macro-compat_2.12/jars/macro-compat_2.12-1.1.1.jar:/home/will/.ivy2/cache/io.circe/circe-parser_2.12/jars/circe-parser_2.12-0.10.0.jar:/home/will/.ivy2/cache/de.heikoseeberger/akka-http-circe_2.12/jars/akka-http-circe_2.12-1.25.2.jar:/home/will/.ivy2/cache/com.typesafe.akka/akka-http_2.12/jars/akka-http_2.12-10.1.8.jar:/home/will/.ivy2/cache/com.typesafe.akka/akka-http-core_2.12/jars/akka-http-core_2.12-10.1.8.jar:/home/will/.ivy2/cache/com.typesafe.akka/akka-parsing_2.12/jars/akka-parsing_2.12-10.1.8.jar:/home/will/.ivy2/cache/com.typesafe.akka/akka-stream_2.12/jars/akka-stream_2.12-2.5.20.jar:/home/will/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.5.23.jar:/home/will/.ivy2/cache/com.typesafe/config/bundles/config-1.3.3.jar:/home/will/.ivy2/cache/org.scala-lang.modules/scala-java8-compat_2.12/bundles/scala-java8-compat_2.12-0.8.0.jar:/home/will/.ivy2/cache/com.typesafe.akka/akka-protobuf_2.12/jars/akka-protobuf_2.12-2.5.20.jar:/home/will/.ivy2/cache/org.reactivestreams/reactive-streams/jars/reactive-streams-1.0.2.jar:/home/will/.ivy2/cache/com.typesafe/ssl-config-core_2.12/bundles/ssl-config-core_2.12-0.3.7.jar:/home/will/.ivy2/cache/org.scala-lang.modules/scala-parser-combinators_2.12/bundles/scala-parser-combinators_2.12-1.1.1.jar:/home/will/.ivy2/cache/io.circe/circe-core_2.12/jars/circe-core_2.12-0.11.1.jar:/home/will/.ivy2/cache/io.circe/circe-numbers_2.12/jars/circe-numbers_2.12-0.11.1.jar:/home/will/.ivy2/cache/org.typelevel/cats-core_2.12/jars/cats-core_2.12-1.5.0.jar:/home/will/.ivy2/cache/org.typelevel/cats-macros_2.12/jars/cats-macros_2.12-1.5.0.jar:/home/will/.ivy2/cache/org.typelevel/machinist_2.12/jars/machinist_2.12-0.6.6.jar:/home/will/.ivy2/cache/org.typelevel/cats-kernel_2.12/jars/cats-kernel_2.12-1.5.0.jar:/home/will/.ivy2/cache/io.circe/circe-jawn_2.12/jars/circe-jawn_2.12-0.11.1.jar:/home/will/.ivy2/cache/org.typelevel/jawn-parser_2.12/jars/jawn-parser_2.12-0.14.1.jar[0m
[0m[[0m[0mdebug[0m] [0m[0mScala compilation took 19.179804094 s[0m
[0m[[0m[0minfo[0m] [0m[0mDone compiling.[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from GameLogic...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(GameLogic)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(GameLogic)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(GameLogic,ModifiedNames(changes = UsedName(==,[Default]), UsedName(asInstanceOf,[Default]), UsedName(notify,[Default]), UsedName(equals,[Default]), UsedName(notifyAll,[Default]), UsedName(!=,[Default]), UsedName($isInstanceOf,[Default]), UsedName(hashCode,[Default]), UsedName($asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(##,[Default]), UsedName(clone,[Default]), UsedName(getClass,[Default]), UsedName(GameLogic,[Default]), UsedName(isInstanceOf,[Default]), UsedName(wait,[Default]), UsedName(GameLogic;init;,[Default]), UsedName(eq,[Default]), UsedName(toString,[Default]), UsedName(ne,[Default]), UsedName(synchronized,[Default]))) invalidates 1 classes due to The GameLogic has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(==,[Default]), UsedName(asInstanceOf,[Default]), UsedName(notify,[Default]), UsedName(equals,[Default]), UsedName(notifyAll,[Default]), UsedName(!=,[Default]), UsedName($isInstanceOf,[Default]), UsedName(hashCode,[Default]), UsedName($asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(##,[Default]), UsedName(clone,[Default]), UsedName(getClass,[Default]), UsedName(GameLogic,[Default]), UsedName(isInstanceOf,[Default]), UsedName(wait,[Default]), UsedName(GameLogic;init;,[Default]), UsedName(eq,[Default]), UsedName(toString,[Default]), UsedName(ne,[Default]), UsedName(synchronized,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(GameLogic)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from GameSession...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(GameSession)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(GameSession)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(GameSession,ModifiedNames(changes = UsedName(==,[Default]), UsedName(asInstanceOf,[Default]), UsedName(GameSession,[Default]), UsedName(GameSession;init;,[Default]), UsedName(notify,[Default]), UsedName(equals,[Default]), UsedName(notifyAll,[Default]), UsedName(!=,[Default]), UsedName($isInstanceOf,[Default]), UsedName(hashCode,[Default]), UsedName($asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(##,[Default]), UsedName(clone,[Default]), UsedName(getClass,[Default]), UsedName(isInstanceOf,[Default]), UsedName(wait,[Default]), UsedName(eq,[Default]), UsedName(toString,[Default]), UsedName(ne,[Default]), UsedName(synchronized,[Default]))) invalidates 1 classes due to The GameSession has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(==,[Default]), UsedName(asInstanceOf,[Default]), UsedName(GameSession,[Default]), UsedName(GameSession;init;,[Default]), UsedName(notify,[Default]), UsedName(equals,[Default]), UsedName(notifyAll,[Default]), UsedName(!=,[Default]), UsedName($isInstanceOf,[Default]), UsedName(hashCode,[Default]), UsedName($asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(##,[Default]), UsedName(clone,[Default]), UsedName(getClass,[Default]), UsedName(isInstanceOf,[Default]), UsedName(wait,[Default]), UsedName(eq,[Default]), UsedName(toString,[Default]), UsedName(ne,[Default]), UsedName(synchronized,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(GameSession)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from twirl.html.tie...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(twirl.html.tie)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(twirl.html.tie)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of controller.UmpireController: Set(UsedName(==,[Default]), UsedName(tie,[Default]), UsedName(apply,[Default]), UsedName(render,[Default]), UsedName(ne,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(twirl.html.tie,ModifiedNames(changes = UsedName(format,[Default]), UsedName(productArity,[Default]), UsedName(copy,[Default]), UsedName(==,[Default]), UsedName(tie,[Default]), UsedName(asInstanceOf,[Default]), UsedName(productIterator,[Default]), UsedName(productElement,[Default]), UsedName(f,[Default]), UsedName(notify,[Default]), UsedName(equals,[Default]), UsedName(notifyAll,[Default]), UsedName(!=,[Default]), UsedName($isInstanceOf,[Default]), UsedName(hashCode,[Default]), UsedName(apply,[Default]), UsedName($asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(##,[Default]), UsedName(clone,[Default]), UsedName(getClass,[Default]), UsedName(canEqual,[Default]), UsedName(isInstanceOf,[Default]), UsedName(wait,[Default]), UsedName(_display_,[Default]), UsedName($init$,[Default]), UsedName(copy$default$1,[Default]), UsedName(productPrefix,[Default]), UsedName(eq,[Default]), UsedName(toString,[Default]), UsedName(ref,[Default]), UsedName(render,[Default]), UsedName(ne,[Default]), UsedName(synchronized,[Default]))) invalidates 2 classes due to The twirl.html.tie has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(format,[Default]), UsedName(productArity,[Default]), UsedName(copy,[Default]), UsedName(==,[Default]), UsedName(tie,[Default]), UsedName(asInstanceOf,[Default]), UsedName(productIterator,[Default]), UsedName(productElement,[Default]), UsedName(f,[Default]), UsedName(notify,[Default]), UsedName(equals,[Default]), UsedName(notifyAll,[Default]), UsedName(!=,[Default]), UsedName($isInstanceOf,[Default]), UsedName(hashCode,[Default]), UsedName(apply,[Default]), UsedName($asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(##,[Default]), UsedName(clone,[Default]), UsedName(getClass,[Default]), UsedName(canEqual,[Default]), UsedName(isInstanceOf,[Default]), UsedName(wait,[Default]), UsedName(_display_,[Default]), UsedName($init$,[Default]), UsedName(copy$default$1,[Default]), UsedName(productPrefix,[Default]), UsedName(eq,[Default]), UsedName(toString,[Default]), UsedName(ref,[Default]), UsedName(render,[Default]), UsedName(ne,[Default]), UsedName(synchronized,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(twirl.html.tie)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(controller.UmpireController)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from twirl.html.winner...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(twirl.html.winner)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(twirl.html.winner)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of controller.UmpireController: Set(UsedName(==,[Default]), UsedName(apply,[Default]), UsedName(winner,[Default]), UsedName(render,[Default]), UsedName(ne,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(twirl.html.winner,ModifiedNames(changes = UsedName(format,[Default]), UsedName(productArity,[Default]), UsedName(copy,[Default]), UsedName(==,[Default]), UsedName(asInstanceOf,[Default]), UsedName(productIterator,[Default]), UsedName(productElement,[Default]), UsedName(f,[Default]), UsedName(notify,[Default]), UsedName(equals,[Default]), UsedName(notifyAll,[Default]), UsedName(!=,[Default]), UsedName($isInstanceOf,[Default]), UsedName(hashCode,[Default]), UsedName(apply,[Default]), UsedName($asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(##,[Default]), UsedName(clone,[Default]), UsedName(getClass,[Default]), UsedName(canEqual,[Default]), UsedName(isInstanceOf,[Default]), UsedName(wait,[Default]), UsedName(_display_,[Default]), UsedName($init$,[Default]), UsedName(copy$default$1,[Default]), UsedName(productPrefix,[Default]), UsedName(eq,[Default]), UsedName(toString,[Default]), UsedName(ref,[Default]), UsedName(winner,[Default]), UsedName(render,[Default]), UsedName(ne,[Default]), UsedName(synchronized,[Default]))) invalidates 2 classes due to The twirl.html.winner has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(format,[Default]), UsedName(productArity,[Default]), UsedName(copy,[Default]), UsedName(==,[Default]), UsedName(asInstanceOf,[Default]), UsedName(productIterator,[Default]), UsedName(productElement,[Default]), UsedName(f,[Default]), UsedName(notify,[Default]), UsedName(equals,[Default]), UsedName(notifyAll,[Default]), UsedName(!=,[Default]), UsedName($isInstanceOf,[Default]), UsedName(hashCode,[Default]), UsedName(apply,[Default]), UsedName($asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(##,[Default]), UsedName(clone,[Default]), UsedName(getClass,[Default]), UsedName(canEqual,[Default]), UsedName(isInstanceOf,[Default]), UsedName(wait,[Default]), UsedName(_display_,[Default]), UsedName($init$,[Default]), UsedName(copy$default$1,[Default]), UsedName(productPrefix,[Default]), UsedName(eq,[Default]), UsedName(toString,[Default]), UsedName(ref,[Default]), UsedName(winner,[Default]), UsedName(render,[Default]), UsedName(ne,[Default]), UsedName(synchronized,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(twirl.html.winner)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(controller.UmpireController)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from Main...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(Main)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(Main)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(Main,ModifiedNames(changes = UsedName(stillTodoRepository,[Default]), UsedName(gameRepository,[Default]))) invalidates 1 classes due to The Main has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(stillTodoRepository,[Default]), UsedName(gameRepository,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(Main)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from repository.GameRepository...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(repository.GameRepository)[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding repository.InMemoryGameRepository by repository.GameRepository[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(repository.GameRepository, repository.InMemoryGameRepository)[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of BaseRouter. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of GameRouter: Set(UsedName(start,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of Main. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of Main. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(repository.GameRepository,ModifiedNames(changes = UsedName(start,[Default]))) invalidates 3 classes due to The repository.GameRepository has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(start,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(repository.GameRepository, repository.InMemoryGameRepository)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(GameRouter)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from twirl.html.loser...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(twirl.html.loser)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(twirl.html.loser)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of controller.UmpireController: Set(UsedName(==,[Default]), UsedName(loser,[Default]), UsedName(apply,[Default]), UsedName(render,[Default]), UsedName(ne,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(twirl.html.loser,ModifiedNames(changes = UsedName(format,[Default]), UsedName(productArity,[Default]), UsedName(copy,[Default]), UsedName(==,[Default]), UsedName(asInstanceOf,[Default]), UsedName(productIterator,[Default]), UsedName(productElement,[Default]), UsedName(f,[Default]), UsedName(notify,[Default]), UsedName(equals,[Default]), UsedName(notifyAll,[Default]), UsedName(loser,[Default]), UsedName(!=,[Default]), UsedName($isInstanceOf,[Default]), UsedName(hashCode,[Default]), UsedName(apply,[Default]), UsedName($asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(##,[Default]), UsedName(clone,[Default]), UsedName(getClass,[Default]), UsedName(canEqual,[Default]), UsedName(isInstanceOf,[Default]), UsedName(wait,[Default]), UsedName(_display_,[Default]), UsedName($init$,[Default]), UsedName(copy$default$1,[Default]), UsedName(productPrefix,[Default]), UsedName(eq,[Default]), UsedName(toString,[Default]), UsedName(ref,[Default]), UsedName(render,[Default]), UsedName(ne,[Default]), UsedName(synchronized,[Default]))) invalidates 2 classes due to The twirl.html.loser has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(format,[Default]), UsedName(productArity,[Default]), UsedName(copy,[Default]), UsedName(==,[Default]), UsedName(asInstanceOf,[Default]), UsedName(productIterator,[Default]), UsedName(productElement,[Default]), UsedName(f,[Default]), UsedName(notify,[Default]), UsedName(equals,[Default]), UsedName(notifyAll,[Default]), UsedName(loser,[Default]), UsedName(!=,[Default]), UsedName($isInstanceOf,[Default]), UsedName(hashCode,[Default]), UsedName(apply,[Default]), UsedName($asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(##,[Default]), UsedName(clone,[Default]), UsedName(getClass,[Default]), UsedName(canEqual,[Default]), UsedName(isInstanceOf,[Default]), UsedName(wait,[Default]), UsedName(_display_,[Default]), UsedName($init$,[Default]), UsedName(copy$default$1,[Default]), UsedName(productPrefix,[Default]), UsedName(eq,[Default]), UsedName(toString,[Default]), UsedName(ref,[Default]), UsedName(render,[Default]), UsedName(ne,[Default]), UsedName(synchronized,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(twirl.html.loser)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(controller.UmpireController)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from repository.InMemoryGameRepository...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(repository.InMemoryGameRepository)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(repository.InMemoryGameRepository)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of Main: Set(UsedName(repository;InMemoryGameRepository;init;,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(repository.InMemoryGameRepository,ModifiedNames(changes = UsedName(repository;InMemoryGameRepository;init;,[Default]), UsedName(start,[Default]))) invalidates 2 classes due to The repository.InMemoryGameRepository has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(repository;InMemoryGameRepository;init;,[Default]), UsedName(start,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(repository.InMemoryGameRepository)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(Main)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from controller.UmpireController...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(controller.UmpireController)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(controller.UmpireController)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(controller.UmpireController,ModifiedNames(changes = UsedName(==,[Default]), UsedName(asInstanceOf,[Default]), UsedName(notify,[Default]), UsedName(equals,[Default]), UsedName(notifyAll,[Default]), UsedName(!=,[Default]), UsedName($isInstanceOf,[Default]), UsedName(hashCode,[Default]), UsedName($asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(##,[Default]), UsedName(clone,[Default]), UsedName(getClass,[Default]), UsedName(isInstanceOf,[Default]), UsedName(wait,[Default]), UsedName(evaluateMoves,[Default]), UsedName(eq,[Default]), UsedName(toString,[Default]), UsedName(UmpireController,[Default]), UsedName(ne,[Default]), UsedName(synchronized,[Default]))) invalidates 1 classes due to The controller.UmpireController has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(==,[Default]), UsedName(asInstanceOf,[Default]), UsedName(notify,[Default]), UsedName(equals,[Default]), UsedName(notifyAll,[Default]), UsedName(!=,[Default]), UsedName($isInstanceOf,[Default]), UsedName(hashCode,[Default]), UsedName($asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(##,[Default]), UsedName(clone,[Default]), UsedName(getClass,[Default]), UsedName(isInstanceOf,[Default]), UsedName(wait,[Default]), UsedName(evaluateMoves,[Default]), UsedName(eq,[Default]), UsedName(toString,[Default]), UsedName(UmpireController,[Default]), UsedName(ne,[Default]), UsedName(synchronized,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(controller.UmpireController)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mNew invalidations:[0m
[0m[[0m[0mdebug[0m] [0m[0m	Set(GameRouter)[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(GameRouter)[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding Main by GameRouter[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding Server by GameRouter[0m
[0m[[0m[0mdebug[0m] [0m[0mPreviously invalidated, but (transitively) depend on new invalidations:[0m
[0m[[0m[0mdebug[0m] [0m[0m	Set(Main)[0m
[0m[[0m[0mdebug[0m] [0m[0mAll newly invalidated classes after taking into account (previously) recompiled classes:Set()[0m
